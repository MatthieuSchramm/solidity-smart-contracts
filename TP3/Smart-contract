pragma solidity ^0.4.15;

contract ProofOfExistence {
  mapping (bytes32 => bool) private proofs;
 
 //store a proof of existence in the contract
  function storeProof(bytes32 proof)
  {
    proofs[proof] = true;
  }
  
  //compute and store the proof for a document
  function notarize(string document)
  {
    var proof = proofFor(document);
    storeProof(proof);
  }
  
  //function to get a document's SHA256
  function proofFor(string document) constant returns (bytes32)
  {
    return sha256(document);
  }
  
  //verify whether the document is notarized or not
  function checkDocument(string document) constant returns (bool)
  {
    var proof = proofFor(document);
    return hasProof(proof);
  }
  
  //returns true if the proof is stored
  function Proved(bytes32 proof) constant returns(bool)
  {
    return proofs[proof];
  }
}
